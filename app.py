import streamlit as st
import pandas as pd
import joblib
import numpy as np

from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import OneHotEncoder, StandardScaler

# === –ó–ê–ì–†–£–ó–ö–ê –ú–û–î–ï–õ–ò ===
model = joblib.load("model_xgboost.pkl")

st.set_page_config(page_title="üß† –ü—Ä–æ–≥–Ω–æ–∑ —Ü–µ–Ω –Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –ê—Å—Ç–∞–Ω–µ", layout="centered")

st.title("üèôÔ∏è –ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã (–ê—Å—Ç–∞–Ω–∞)")
st.markdown("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–≤–∞—Ä—Ç–∏—Ä—ã, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.")

# === –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ===
region = st.selectbox("–†–∞–π–æ–Ω", ['–ï—Å–∏–ª—å—Å–∫–∏–π —Ä-–Ω', '–ê–ª–º–∞—Ç—ã —Ä-–Ω', '–ù—É—Ä–∞ —Ä-–Ω', '–°–∞—Ä—ã–∞—Ä–∫–∞ —Ä-–Ω', '—Ä-–Ω –ë–∞–π–∫–æ–Ω—É—Ä', '–°–∞—Ä–∞–π—à—ã–∫ —Ä-–Ω'])
house_type = st.selectbox("–¢–∏–ø –¥–æ–º–∞", ['–º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π', '–∫–∏—Ä–ø–∏—á–Ω—ã–π', '–ø–∞–Ω–µ–ª—å–Ω—ã–π', '–∏–Ω–æ–π'])
condition = st.selectbox("–°–æ—Å—Ç–æ—è–Ω–∏–µ", ['—Å–≤–µ–∂–∏–π —Ä–µ–º–æ–Ω—Ç', '–Ω–µ –Ω–æ–≤—ã–π, –Ω–æ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π —Ä–µ–º–æ–Ω—Ç', '—á–µ—Ä–Ω–æ–≤–∞—è –æ—Ç–¥–µ–ª–∫–∞', '—Ç—Ä–µ–±—É–µ—Ç —Ä–µ–º–æ–Ω—Ç–∞', '—Å–≤–æ–±–æ–¥–Ω–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞'])
complex_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ñ–ö (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)", value="")

total_area = st.slider("–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å (–º¬≤)", 20, 300, 70)
room_count = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç", 1, 6, 2)
floor_num = st.slider("–≠—Ç–∞–∂", 1, 30, 3)
floor_total = st.slider("–≠—Ç–∞–∂–µ–π –≤ –¥–æ–º–µ", floor_num, 40, 9)
year_built = st.slider("–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏", 1960, 2026, 2021)
ceiling_height = st.slider("–í—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–æ–≤ (–º)", 2.2, 4.0, 2.8, step=0.05)

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—Ö–æ–¥–∞ ===
input_dict = {
    'region_clean': [region],
    'house_type': [house_type],
    'condition': [condition],
    'complex': [complex_name],
    'total_area': [total_area],
    'room_count': [room_count],
    'floor_num': [floor_num],
    'floor_total': [floor_total],
    'year_built': [year_built],
    'ceiling_height': [ceiling_height]
}
input_df = pd.DataFrame(input_dict)

# === –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ ===
if st.button("üîÆ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É"):
    prediction = model.predict(input_df)[0]
    prediction_rounded = round(prediction, -4)

    st.success(f"üí∞ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: **{prediction_rounded:,.0f} ‚Ç∏**")
    st.caption("–≠—Ç–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö, –æ–±—É—á–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞—Ö –≤ –ê—Å—Ç–∞–Ω–µ.")
